var app = angular.module('trackmilesApp', ['trackmilesFilters']);

app.controller('TripLogController', ['$scope', '$http', '$filter', function($scope, $http, $filter) {
    var tripLog = this;

    $scope.tripDates = [];
    $scope.tripsByDate = {};
    $scope.placesById = {};
    $scope.activeStart = {};
    $scope.activeEnd = {};

    this.map = new L.Map('map');
    var osmUrl='http://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png';
    var osmAttrib='Map data Â© <a href="http://openstreetmap.org">OpenStreetMap</a> contributors';
    var osm = new L.TileLayer(osmUrl, {minZoom: 4, maxZoom: 16, attribution: osmAttrib});
    this.map.setView(new L.LatLng(51.3, 0.7),9);
    this.map.addLayer(osm);
    this.tripLayers = [];

    this.markerIcon = L.icon({
        iconUrl: '<%= asset_path('marker-icon.png') %>',
        iconRetinaUrl: '<%= asset_path('marker-icon-2x.png') %>',
        shadowUrl: '<%= asset_path('marker-shadow.png') %>',
        iconSize: [25, 41],
        iconAnchor: [12, 41],
        popupAnchor: [1, -34],
        shadowSize: [41, 41]
    });

    $http.get('/trips.json').success(function (data) {
        var trips = data.trips;
        var tripsByDate = {};
        var tripDates = [];
        for (var i = 0; i < trips.length; i++) {
            var date = $filter('date')(trips[i]['start_time'], 'fullDate');
            if (date in tripsByDate) {
                tripsByDate[date].push(trips[i]);
            } else {
                tripsByDate[date] = [trips[i]];
                tripDates.push(date);
            }
        }
        tripDates = tripDates.sort(function(a,b) {return new Date(b) - new Date(a)});

        var placesById = {};
        var places = data.places;
        for (var i = 0; i < places.length; i++) {
            placesById[places[i].id] = places[i];
        }

        $scope.tripDates = tripDates;
        $scope.tripsByDate = tripsByDate;
        $scope.placesById = placesById;
    });

    this.showMapStart = function(trip) {
        this.showTrip(trip, true);
    };
    this.showMapEnd = function(trip) {
        this.showTrip(trip, false);
    };

    this.clearTripLayers = function() {
        for (var i = 0; i < this.tripLayers.length; i++) {
            this.map.removeLayer(this.tripLayers[i]);
        }
    };

    this.addTripLayer = function(layer) {
        this.map.addLayer(layer);
        this.tripLayers.push(layer);
    };

    this.showTrip = function(trip, focusOnStart) {
        var start = $scope.placesById[trip.start_place_id];
        var end = $scope.placesById[trip.end_place_id];
        $scope.activeStart = start;
        $scope.activeEnd = end;

        this.clearTripLayers();

        var endMarker = L.marker([end.latitude, end.longitude],
                {icon: this.markerIcon, title: end.summary});
        this.addTripLayer(endMarker);

        this.showWaypoints(trip);

        this.map.fitBounds([[start.latitude, start.longitude],
            [end.latitude, end.longitude]]);
    };

    this.showWaypoints = function(trip) {
        $http.get('/waypoints.json', {params: {trip_id: trip.id}}).success(function (data) {
            console.log(data);
            var points = [];
            for (var i = 0; i < data.length; i++) {
                points.push(new L.LatLng(data[i][0], data[i][1]));
            }
            var line = L.polyline(points);
            tripLog.addTripLayer(line);
        });
    };
}]);

angular.module('trackmilesFilters', []).filter('cutright', function() {
    return function(input, len) {
        return input.substring(0, input.length - len);
    };
});